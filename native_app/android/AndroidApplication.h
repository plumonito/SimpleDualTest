#ifndef _ANDROIDAPPLICATION_H
#define _ANDROIDAPPLICATION_H

#include <stdint.h>
#include "System.h"
#include "ManagedPtr.h"

// android native app support structures
class NvEGLUtil;
struct AInputEvent;
struct android_app;

namespace System
{

class Application;

namespace Internal
{

class AndroidApplication: public ManagedObject<AndroidApplication>
{
public:
    enum State
    {
        Initialization, MainLoop, PrepareForExit, Exit
    };

    AndroidApplication(android_app *app, NvEGLUtil *egl);
    ~AndroidApplication(void);

    void mainLoop(void);

private:
    enum
    {
        MaximumKeyCodeValue = 256
    };

    static void HandleCmd(android_app *app, int32_t cmd);

    /**
     * Handle commands.
     */
    void handleCommand(int cmd);

    /**
     * Wrapper to handle input events generated by the UI.
     */
    static int32_t HandleInput(android_app *app, AInputEvent *event);

    /**
     * Handle inputs.
     */
    int handleInput(AInputEvent *event);

    void setupButtonMapping(void);

    android_app *mNativeAppInstance;

    NvEGLUtil *mEgl;
    Application *mCurrentApplication;
    State mCurrentApplicationState;

    System::Key mButtonMapping[MaximumKeyCodeValue];
    int mPreviousDigitalCrossState;
};

}

}

#endif

